<metro:MetroWindow
	x:Class="LIC.Malone.Client.Desktop.Views.AppView"
	xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:cal="http://www.caliburnproject.org"
	xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
	xmlns:local="clr-namespace:LIC.Malone.Client.Desktop"
	xmlns:controls="clr-namespace:LIC.Malone.Client.Desktop.Controls"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:converters="clr-namespace:LIC.Malone.Client.Desktop.Converters"
	xmlns:designData="clr-namespace:LIC.Malone.Client.Desktop.DesignData"
	mc:Ignorable="d"
	Title="Malone"
	TitleCaps="False"
	Icon="Malone.ico"
	ShowIconOnTitleBar="False"
	GlowBrush="{StaticResource WindowColorBrush}"
	WindowStartupLocation="CenterScreen"
	MinWidth="1000" MinHeight="730"
	Width="1000" Height="730"
	cal:Message.Attach="[Event SizeChanged] = [Action WindowResized($executionContext)]"
	d:DataContext="{d:DesignInstance Type=designData:AppViewModelDesignData, IsDesignTimeCreatable=True}"
	cal:Bind.AtDesignTime="True">

	<Grid Name="MainGrid">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Name="HistoryColumn" Width="1*" MinWidth="280" />
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="2*" MinWidth="500" />
		</Grid.ColumnDefinitions>

		<TabControl Grid.Column="0" Margin="-2 -2 0 0" Padding="0">

			<TabControl.Resources>
				<converters:HideOnHistoryConverter x:Key="HideOnHistoryConverter" />
				<converters:ShowOnHistoryConverter x:Key="ShowOnHistoryConverter" />
				<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabHeader}"></Style>
			</TabControl.Resources>

			<TabItem Header="History">
				<TabItem.Content>
					<Grid>

						<StackPanel Orientation="Vertical" Visibility="{Binding History, Converter={StaticResource HideOnHistoryConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center">
							<ContentControl Content="{StaticResource IconSmileyFrown}" />
							<TextBlock Style="{StaticResource EmptyListMessage}">Nothing to see here. Try sending a request!</TextBlock>
						</StackPanel>

						<Canvas>
							<Button Canvas.Top="-45" Canvas.Right="-1" BorderThickness="0" Background="#efefef" Visibility="{Binding History, Converter={StaticResource ShowOnHistoryConverter}}"
									cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action ClearHistory($executionContext)]" ToolTip="Clear history">
								<Button.Template>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Name="Border" Background="{TemplateBinding Background}" Height="40" Width="40">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="Border" Property="Background" Value="Red"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
								<Path HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-2 -2 0 0" Fill="White" Data="{StaticResource IconCircleWithCross}"/>
							</Button>
						</Canvas>

						<DockPanel Name="HistoryDockPanel" Grid.Column="0" LastChildFill="True" Visibility="{Binding History, Converter={StaticResource ShowOnHistoryConverter}}">

							<Label Name="HistoryHorizontalOffset" Visibility="Collapsed" />
							<Label Name="HistoryVerticalScrollBarOffset" Visibility="Collapsed" />

							<controls:MaloneListBox x:Name="History" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" SelectionMode="Single"
								BorderThickness="0" Padding="0" Margin="-2"
								cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action HistoryClicked($executionContext)]; [Event LayoutUpdated] = [Action HistoryLayoutUpdated($executionContext)]">

								<controls:MaloneListBox.Resources>
									<ResourceDictionary>
										<Style x:Key="DeleteRequestBorder" TargetType="{x:Type Border}">
											<Setter Property="Visibility" Value="Hidden" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
													<Setter Property="Visibility" Value="Visible" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
										<Style x:Key="DeleteRequestButton" TargetType="{x:Type Button}">
											<Setter Property="Visibility" Value="Hidden" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
													<Setter Property="Visibility" Value="Visible" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</ResourceDictionary>
								</controls:MaloneListBox.Resources>

								<ListBox.ItemTemplate>
									<DataTemplate>
										<Grid Margin="7,3" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=Width}">
											<Grid.Resources>
												<converters:HttpStatusCodeToBrushConverter x:Key="HttpStatusCodeToBrushConverter" />
												<converters:HttpStatusCodeToIntConverter x:Key="HttpStatusCodeToIntConverter" />
												<converters:HistoryWidthConverter x:Key="HistoryWidthConverter" />
											</Grid.Resources>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="40" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition />
												<RowDefinition />
											</Grid.RowDefinitions>

											<Canvas Name="HistoryButtonCanvas" ZIndex="300" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2">

												<Border Width="42" Height="42" Background="#CBE8F6" Canvas.Top="-4" Style="{StaticResource DeleteRequestBorder}">
													<Canvas.Left>
														<MultiBinding Converter="{StaticResource HistoryWidthConverter}">
															<Binding ElementName="History" Path="ActualWidth" />
															<Binding ElementName="HistoryHorizontalOffset" Path="Content" />
															<Binding ElementName="HistoryVerticalScrollBarOffset" Path="Content" />
															<Binding Source="Border" />
														</MultiBinding>
													</Canvas.Left>
												</Border>

												<controls:IconLink
													cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action RemoveFromHistory($this)]"
													Canvas.Top="-3" Style="{StaticResource DeleteRequestButton}" HoverColor="{StaticResource LinkDangerHoverColorBrush}" Height="40" Width="40"
													HorizontalAlignment="Left" IconData="{StaticResource IconCircleWithMinus}" IconMargin="0" BackgroundColor="White">
													<Canvas.Left>
														<MultiBinding Converter="{StaticResource HistoryWidthConverter}">
															<Binding ElementName="History" Path="ActualWidth" />
															<Binding ElementName="HistoryHorizontalOffset" Path="Content" />
															<Binding ElementName="HistoryVerticalScrollBarOffset" Path="Content" />
															<Binding Source="Button"></Binding>
														</MultiBinding>
													</Canvas.Left>
												</controls:IconLink>
											</Canvas>

											<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Method}" Style="{StaticResource History.BaseUrl}" />
											<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Response.HttpStatusCode, Converter={StaticResource HttpStatusCodeToIntConverter}}" Foreground="{Binding Response.HttpStatusCode, Converter={StaticResource HttpStatusCodeToBrushConverter}}" />

											<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding BaseUrl}" Style="{StaticResource History.BaseUrl}" />
											<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ResourcePath}" Style="{StaticResource History.ResourcePath}" />

										</Grid>

									</DataTemplate>
								</ListBox.ItemTemplate>

							</controls:MaloneListBox>

						</DockPanel>
					</Grid>
				</TabItem.Content>
			</TabItem>

			<TabItem Header="Collections">
				<TabItem.Content>
					<Grid>
						<StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
							<ContentControl Content="{StaticResource IconSmileyFrown}" />
							<TextBlock Style="{StaticResource EmptyListMessage}">Collections are super-nifty. Why not create one?</TextBlock>
						</StackPanel>

						<Canvas DockPanel.Dock="Top">
							<Button Canvas.Top="-45" Canvas.Right="-1" BorderThickness="0" Background="#efefef"
									cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action AddCollection()]" ToolTip="Add collection">
								<Button.Template>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Name="Border" Background="{TemplateBinding Background}" Height="40" Width="40">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="Border" Property="Background" Value="#449d44"></Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
								<Path HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-2 -2 0 0" Fill="White" Data="M10,1.6c-4.639,0-8.4,3.761-8.4,8.4s3.761,8.4,8.4,8.4s8.4-3.761,8.4-8.4S14.639,1.6,10,1.6z M15,11h-4v4H9 v-4H5V9h4V5h2v4h4V11z"/>
							</Button>
						</Canvas>

						<DockPanel Name="CollectionsDockPanel" LastChildFill="True" Visibility="{Binding History, Converter={StaticResource ShowOnHistoryConverter}}">

						</DockPanel>

					</Grid>

				</TabItem.Content>
			</TabItem>
		</TabControl>

		<GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" />

			<Grid Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="2*" />
				</Grid.RowDefinitions>

				<DockPanel>
					<Label Style="{StaticResource H1}" Content="Request" />
					<Path Visibility="{Binding DirtyVisibility}" Margin="3 17 0 0" Fill="#FFD51C" Data="{StaticResource IconNew}" ToolTip="Request has been modified. Original response is still shown." />
					<controls:IconLink x:Name="Reset" HorizontalAlignment="Right" IconData="{StaticResource IconErase}" IconMargin="{StaticResource IconEraseMargin}" ToolTip="Clear this request" />
				</DockPanel>

				<Grid Grid.Row="1" Margin="15 10 15 0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="70"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="130"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition Height="10"/>
						<RowDefinition />
					</Grid.RowDefinitions>

					<ComboBox Grid.Row="0" Grid.Column="0" x:Name="Methods" Width="70" Style="{StaticResource DefaultComboBox}" />
					<TextBox  Grid.Row="0" Grid.Column="2" x:Name="Url" metro:TextBoxHelper.Watermark="Enter URL or choose from history" Style="{StaticResource DefaultTextBox}"/>
					<ComboBox Grid.Row="0" Grid.Column="4" x:Name="Accepts" Width="130" Style="{StaticResource DefaultComboBox}" />

					<controls:IconButton Grid.Row="2" Grid.Column="2" x:Name="Send" Content="Send" IconData="{StaticResource IconPaperPlane}" IconMargin="{StaticResource IconPaperPlaneMargin}" HorizontalAlignment="Left" />

				</Grid>

				<TabControl Grid.Row="2" Margin="4 5 0 0">

					<TabControl.Resources>
						<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabHeader}"></Style>
					</TabControl.Resources>

					<TabItem Header="Body">

						<StackPanel>

							<Canvas>
								<ComboBox x:Name="ContentTypes" Canvas.Right="10" Canvas.Top="-42" HorizontalAlignment="Right" Width="130" Style="{StaticResource DefaultComboBox}" />
							</Canvas>

							<ae:TextEditor Document="{Binding RequestBody}" VerticalScrollBarVisibility="Disabled" SyntaxHighlighting="{Binding RequestBodyHighlighting}" IsReadOnly="False" MinHeight="95">
								<i:Interaction.Behaviors>
									<local:BubbleScrollEvent/>
								</i:Interaction.Behaviors>
							</ae:TextEditor>

						</StackPanel>

					</TabItem>

					<TabItem Header="Headers">
						<DockPanel Margin="8 -8 15 0" LastChildFill="False">

							<ItemsControl DockPanel.Dock="Top" x:Name="Headers">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<DataTemplate.Resources>
											<Style x:Key="ReservedHeaderAction" TargetType="controls:IconLink" BasedOn="{StaticResource HeaderAction}">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Name}" Value="Accept">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding Name}" Value="Accept-Encoding">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding Name}" Value="Authorization">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding Name}" Value="Content-Type">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</DataTemplate.Resources>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="230"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="24"/>
											</Grid.ColumnDefinitions>
											<TextBox Grid.Column="0" Style="{StaticResource HeaderName}" Text="{Binding Name}" metro:TextBoxHelper.Watermark="Name" />
											<TextBox Grid.Column="1" Style="{StaticResource HeaderValue}" Text="{Binding Value}" metro:TextBoxHelper.Watermark="Value" />
											<controls:IconLink Grid.Column="2" Style="{StaticResource ReservedHeaderAction}" IconData="{StaticResource IconMinus}" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action RemoveFromHeaders($this)]" />
										</Grid>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<Grid DockPanel.Dock="Top">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="230"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="24"/>
								</Grid.ColumnDefinitions>
								<TextBox Grid.Column="0" x:Name="HeaderName" Style="{StaticResource HeaderName}" IsReadOnly="False" metro:TextBoxHelper.Watermark="Name" />
								<TextBox Grid.Column="1" x:Name="HeaderValue" Style="{StaticResource HeaderValue}" IsReadOnly="False" metro:TextBoxHelper.Watermark="Value" />
								<controls:IconLink Grid.Column="2" Style="{StaticResource HeaderAction}" IconData="{StaticResource IconPlus}" IconMargin="0 5 0 0" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action AddHeader()]" />
							</Grid>

						</DockPanel>
					</TabItem>

					<TabItem Header="Authentication">

						<DockPanel Margin="3 -3 15 0">

							<Grid DockPanel.Dock="Top">
								<ComboBox x:Name="Tokens" Style="{StaticResource DefaultComboBox}" VerticalAlignment="Bottom" Margin="5,0,96,0" Padding="3" Height="30" >
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<DataTemplate.Resources>
												<Style x:Key="Historical" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlock}">
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsHistorical}" Value="True">
															<Setter Property="Text" Value="History"/>
														</DataTrigger>
														<DataTrigger Binding="{Binding IsHistorical}" Value="False">
															<Setter Property="Text" Value="Session"/>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</DataTemplate.Resources>
											<DockPanel>
												<TextBlock Style="{StaticResource Historical}" Width="50" Foreground="#666666"/>
												<TextBlock Text="{Binding Name}" />
											</DockPanel>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
								<controls:IconLink HorizontalAlignment="Right" VerticalAlignment="Bottom" Content="Add" IconData="{StaticResource IconPlus}" IconMargin="{StaticResource IconPlusMargin}" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action AddToken()]" />
							</Grid>

							<ae:TextEditor Margin="0 10 0 0" Document="{Binding SelectedTokenJson, Mode=OneWay}" SyntaxHighlighting="JavaScript">
							</ae:TextEditor>

						</DockPanel>
					</TabItem>

				</TabControl>

				<Line Grid.Row="3" Margin="0 20 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Stretch="Fill" StrokeThickness="1" X1="0" X2="1">
					<Shape.Stroke>
						<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
							<GradientStop Color="Transparent" Offset="0" />
							<GradientStop Color="#E1E1E1" Offset="0.2" />
							<GradientStop Color="#E1E1E1" Offset="0.8"  />
							<GradientStop Color="Transparent" Offset="1" />
						</LinearGradientBrush>
					</Shape.Stroke>
				</Line>

				<Line Grid.Row="4" Margin="0 0 0 8" HorizontalAlignment="Stretch" VerticalAlignment="Center" Stretch="Fill" StrokeThickness="2" X1="0" X2="1">
					<Shape.Stroke>
						<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
							<GradientStop Color="Transparent" Offset="0" />
							<GradientStop Color="#FAFAFA" Offset="0.2" />
							<GradientStop Color="#FAFAFA" Offset="0.8"  />
							<GradientStop Color="Transparent" Offset="1" />
						</LinearGradientBrush>
					</Shape.Stroke>
				</Line>

				<Grid Grid.Row="5">

					<ContentControl Content="{StaticResource IconCloudIrc}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding RequestHasNoResponseVisibility}" />

					<DockPanel LastChildFill="True" Visibility="{Binding RequestHasResponseVisibility}">

						<DockPanel DockPanel.Dock="Top" LastChildFill="True">
							<Label DockPanel.Dock="Left" Style="{StaticResource H1}" Content="Response" />
							<controls:HttpStatus DockPanel.Dock="Right" HttpStatusCode="{Binding HttpStatusCode}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0 0 10 10"/>
							<Label DockPanel.Dock="Right" x:Name="ResponseTime" Margin="0 0 10 5" Style="{StaticResource H2}" Foreground="{StaticResource RecededColorBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Content="Time">
								<Label.ToolTip>
									<StackPanel Orientation="Vertical">
										<StackPanel Orientation="Horizontal">
											<Label Width="41">Local:</Label>
											<Label Content="{Binding Path=.SelectedHistory.Response.AtLocalString}"/>
										</StackPanel>
										<StackPanel Orientation="Horizontal">
											<Label Width="41">UTC:</Label>
											<Label Content="{Binding Path=.SelectedHistory.Response.AtUtcString}"/>
										</StackPanel>
									</StackPanel>
								</Label.ToolTip>
							</Label>
						</DockPanel>

						<TabControl DockPanel.Dock="Top" Margin="4 -9 0 0">

							<TabControl.Resources>
								<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabHeader}"></Style>
							</TabControl.Resources>

							<TabItem Header="Body">
								<DockPanel>
									<!--TODO: Highlight based on accept header.-->
									<StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 -45 0 0">
										<Label x:Name="ResponseContentType" Style="{StaticResource DefaultLabel}" Margin="3 2 0 0">content/type</Label>
									</StackPanel>
									<ae:TextEditor Document="{Binding ResponseBody}" SyntaxHighlighting="{Binding ResponseBodyHighlighting}">
									</ae:TextEditor>
								</DockPanel>
							</TabItem>

							<TabItem Header="Headers">
								<DockPanel Margin="3 -8 15 0" LastChildFill="False">
									<ItemsControl DockPanel.Dock="Top" x:Name="ResponseHeaders">
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="230"/>
														<ColumnDefinition Width="*"/>
														<ColumnDefinition Width="24"/>
													</Grid.ColumnDefinitions>
													<TextBox Grid.Column="0" Style="{StaticResource HeaderName}" Text="{Binding Name}" />
													<TextBox Grid.Column="1" Style="{StaticResource HeaderValue}" Text="{Binding Value}" />
												</Grid>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</DockPanel>
							</TabItem>

						</TabControl>

					</DockPanel>

				</Grid>

			</Grid>

	</Grid>

	<!-- TODO: Have some settings. -->
	<!--<metro:MetroWindow.RightWindowCommands>
		<metro:WindowCommands>
			<Button Content="Settings" cal:Message.Attach="[Event PreviewMouseLeftButtonUp] = [Action ManageTokens()]" />
		</metro:WindowCommands>
	</metro:MetroWindow.RightWindowCommands>-->

</metro:MetroWindow>
